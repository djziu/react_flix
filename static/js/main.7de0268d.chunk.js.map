{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","Title","_templateObject2","Grid","_templateObject3","Section","_ref","title","children","react_default","a","createElement","Loader_templateObject","Loader","Loader_Container","role","aria-label","Message_templateObject","Text","span","Message_templateObject2","props","color","Message","text","Message_Container","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","Poster_templateObject3","ImageContainer","_templateObject4","_templateObject5","Year","_templateObject6","Poster","id","imageUrl","rating","year","_ref$isMovie","isMovie","Link","to","concat","Poster_Container","require","Poster_Title","length","substring","prototype","PropTypes","number","isRequired","string","isMoive","bool","HomePresenter_templateObject","HomePresenter","nowPlaying","popular","upcoming","loading","error","Fragment","Helmet_default","HomePresenter_Container","Components_Section","map","movie","Components_Poster","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","_this$state","Home_HomePresenter","React","Component","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","show","original_name","first_air_date","Components_Message","TVContainer","TV_TVPresenter","Header","header","Header_templateObject","List","ul","Header_templateObject2","Item","li","Header_templateObject3","current","SLink","Header_templateObject4","withRouter","pathname","location","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","SearchPresenter_Container","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","_this","searchByTerm","target","_callee","_ref2","_ref3","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","Search_SearchPresenter","DetailPresenter_templateObject","Backdrop","DetailPresenter_templateObject2","bgImage","Content","DetailPresenter_templateObject3","Cover","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","h3","DetailPresenter_templateObject6","ItemContainer","_templateObject7","_templateObject8","Divider","_templateObject9","Overview","_templateObject10","DetailPresenter","result","DetailPresenter_Container","backdrop_path","DetailPresenter_Title","DetailPresenter_Item","runtime","episode_run_time","genres","genre","index","name","overview","object","DetailContainer","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","includes","match","push","history","parsedId","parseInt","isNaN","Detail_DetailPresenter","Router","HashRouter","Components_Header","Switch","Route","path","exact","component","Home","TV","Search","Detail","Redirect","from","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.7de0268d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.cbe915bf.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child){\r\n        margin-bottom: 50px;\r\n    }\r\n`;\r\n\r\nconst Title = styled.div`\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n    margin-top: 25px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, 125px);\r\n    grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) =>(\r\n    <Container>\r\n        <Title>{title} </Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([\r\n      PropTypes.arrayOf(PropTypes.node),\r\n      PropTypes.node\r\n    ])\r\n  };\r\n  \r\n  export default Section;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 28px;\r\n    margin-top: 20px\r\n`;\r\n\r\nexport default () => (\r\n    <Container>\r\n        <span role=\"img\" aria-label=\"Loading\">\r\n        ⏰\r\n        </span>\r\n    </Container>\r\n)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color:${props => props.color};\r\n`;\r\n\r\nconst Message = ({text , color}) => (\r\n    <Container>\r\n        <Text color={color}>{text}</Text>\r\n    </Container>\r\n);\r\n\r\n\r\n\r\n\r\n\r\nMessage.propTypes ={\r\n    text:PropTypes.string.isRequired,\r\n    color:PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n    background-image: url(${props => props.bgUrl});\r\n    height: 180px;\r\n    background-size: cover;\r\n    border-radius: 4px;\r\n    background-position: center center;\r\n    transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.div`\r\n    bottom: 5px;\r\n    right: 5px;\r\n    position: absolute;\r\n    opacity: 0;\r\n    transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom: 5px;\r\n    position: relative;\r\n    &:hover{\r\n        ${Image}{\r\n            opacity: 0.3;   \r\n        }\r\n        ${Rating}{\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    display: block;\r\n    margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n    font-size: 10px;\r\n    color: rgba(255,255,255,0.5);\r\n`;\r\n\r\nconst Poster = ({id, imageUrl, title , rating, year, isMovie = false }) =>(\r\n\r\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n        <Container>\r\n            <ImageContainer>\r\n                <Image\r\n                    bgUrl={\r\n                        imageUrl\r\n                        ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n                        : require(\"../assets/noPosterSmall.png\")\r\n                    }\r\n                />\r\n                <Rating>\r\n                    <span role=\"img\" aria-label=\"rating\">\r\n                    ⭐️ \r\n                    </span>{\" \"}\r\n                    {rating}/10\r\n                </Rating>\r\n            </ImageContainer>\r\n            <Title>\r\n                 {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n            </Title>\r\n            <Year>{year}</Year>\r\n        </Container>\r\n    </Link>\r\n);\r\n\r\n\r\n\r\nPoster.prototype = {\r\n    id: PropTypes.number.isRequired ,\r\n    imageUrl: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMoive: PropTypes.bool\r\n};\r\n\r\nexport default Poster;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n  <>\r\n   <Helmet>\r\n      <title>movies</title>\r\n   </Helmet>\r\n   {loading?(\r\n     <Loader />\r\n   ):(\r\n     <Container>\r\n        <Helmet>\r\n            <title>movies</title>\r\n        </Helmet>\r\n        {nowPlaying && nowPlaying.length >0 &&(\r\n          <Section title = \"now playing\">\r\n            {nowPlaying.map(movie =>(\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length>0 &&(\r\n          <Section title = \"upcoming\">\r\n              {upcoming.map(movie =>(\r\n                <Poster\r\n                    key={movie.id}\r\n                    id={movie.id}\r\n                    imageUrl={movie.poster_path}\r\n                    title={movie.original_title}\r\n                    rating={movie.vote_average}\r\n                    year={movie.release_date.substring(0, 4)}\r\n                    isMovie={true}\r\n                />\r\n              ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length>0 && (\r\n          <Section title=\"popular\">\r\n                {popular.map(movie =>(\r\n                  <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={movie.release_date.substring(0, 4)}\r\n                  isMovie={true}\r\n                  />\r\n                )) }\r\n          </Section>\r\n        ) }\r\n      </Container>\r\n   )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"10923b261ba94d897ac6b81148314a3f\",\r\n    language: \"en-US\"\r\n  }\r\n});\r\n\r\nexport const moviesApi ={\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upcoming: () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    movieDetail: id =>\r\n        api.get(`movie/${id}`,{\r\n            params:{\r\n                append_to_response : \"videos\"\r\n            }\r\n        }),\r\n    search: term =>\r\n        api.get(\"search/movie\",{\r\n            params:{\r\n                query:encodeURIComponent(term)\r\n            }\r\n        }) \r\n    \r\n};\r\n\r\nexport const tvApi ={\r\n    topRated: () => api.get(\"tv/top_rated\"),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    airingToday: () => api.get(\"tv/airing_today\"),\r\n    showDetail: id =>\r\n        api.get(`tv/${id}`,{\r\n            params:{\r\n                append_to_response: \"videos\"\r\n            }\r\n        }),\r\n    search: term=> \r\n    api.get(\"search/tv\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n      })\r\n};\r\n\r\n\r\n\r\n","import HomeContainer from './HomeContainer';\r\nexport default HomeContainer;","import React from 'react';\r\nimport HomePresenter from './HomePresenter';\r\nimport {moviesApi} from 'api';\r\n\r\nexport default class extends React.Component{\r\n    state ={\r\n        nowPlaying: null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount(){\r\n        try{\r\n            const {\r\n                data : { results: nowPlaying}\r\n            } = await moviesApi.nowPlaying();\r\n            const {\r\n                data : {results:upcoming}\r\n            } = await  moviesApi.upcoming();\r\n            const {\r\n                data : {results: popular}\r\n            } = await moviesApi.popular();\r\n            this.setState({\r\n                nowPlaying,\r\n                upcoming,\r\n                popular\r\n            });\r\n\r\n        }catch{\r\n            this.setState({\r\n                error: \"can't find movie information\"\r\n            });\r\n        }finally{\r\n            this.setState({\r\n                loading : false\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {nowPlaying , upcoming, popular, error , loading} = this.state;\r\n        return(\r\n            <HomePresenter \r\n                nowPlaying={nowPlaying}\r\n                upcoming={upcoming}\r\n                popular={popular}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n     \r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px\r\n`;\r\n\r\nconst TVPresenter = ({topRated, popular, airingToday, loading, error}) =>(\r\n    <>\r\n        <Helmet>\r\n            <title>tv show | myflix</title>\r\n        </Helmet>\r\n        {loading ?(\r\n            <Loader/>\r\n        ):(\r\n            <Container>\r\n                {topRated && topRated.length>0 && (\r\n                    <Section title = \"popular shows\">\r\n                        {topRated.map(show =>(\r\n                            <Poster\r\n                                key ={show.id}\r\n                                id={show.id}\r\n                                imageUrl={show.poster_path}\r\n                                title={show.original_name}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date.substring(0, 4)}\r\n                            />\r\n                        )) }\r\n                    </Section>\r\n                )}\r\n                {airingToday && airingToday.length >0 &&(\r\n                    <Section title=\"Airing Today\">\r\n                        {airingToday.map(show =>(\r\n                            <Poster\r\n                                key={show.id}\r\n                                id={show.id}\r\n                                imageUrl={show.poster_path}\r\n                                title={show.original_name}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date.substring(0, 4)}\r\n                            />\r\n                        )) }\r\n                    </Section>\r\n                )}\r\n                 {error && <Message color=\"#e74c3c\" text={error} />}\r\n            </Container>\r\n        )}\r\n    </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n    topRated: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    airingToday: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n  };\r\n\r\n  export default TVPresenter;","import TVContainer  from './TVContainer';\r\n\r\nexport default TVContainer;","import React from 'react';\r\nimport TVPresenter  from './TVPresenter';\r\nimport {tvApi} from '../../api';\r\n\r\nexport default class extends React.Component{\r\n    state ={\r\n        topRated: null,\r\n        popular: null,\r\n        airingToday: null,\r\n        loading: true,\r\n        error: null\r\n    };\r\n\r\n    async componentDidMount(){\r\n        try{\r\n            const {data:\r\n                {results:topRated}\r\n            } = await tvApi.topRated();\r\n\r\n            const {data:\r\n                {results:popular}\r\n            } = await tvApi.popular();\r\n            const {data:\r\n                    {results:airingToday}\r\n            } = await tvApi.airingToday();\r\n            this.setState({topRated , popular , airingToday});\r\n        }catch{\r\n            this.setState({\r\n                error:\"can't find tv information\"});\r\n        }finally{\r\n            this.setState({loading:false});\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        const {topRated , popular , airingToday , loading , error} = this.state;\r\n        return(\r\n            <TVPresenter\r\n                topRated ={topRated}\r\n                popular ={popular}\r\n                airingToday={airingToday}\r\n                loading={loading}\r\n                error={error}\r\n            />\r\n        );\r\n    }\r\n\r\n}","import  React from 'react';\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n    color:white;\r\n    position:fixed;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:50px;\r\n    display:flex;\r\n    align-items:center,\r\n    background-color:rgba(20, 20, 20, 0.8);\r\n    z-index:10;\r\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n    display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n    width: 80px;\r\n    height: 50px;\r\n    text-align: center;\r\n    border-bottom: 3px solid\r\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\r\n    transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n    height:50px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport default withRouter(( {location:{pathname}} ) =>(\r\n    <Header>\r\n        <List>\r\n            <Item current={pathname === \"/\"}>\r\n                <SLink to=\"/\">movies</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/tv\"}>\r\n                <SLink to=\"/tv\">tv</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/search\"}>\r\n                <SLink to= \"/search\">search</SLink>\r\n            </Item>\r\n        </List>\r\n    </Header>\r\n));\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin-bottom: 50px;\r\n    width: 100%\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all: unset;\r\n    font-size: 28px;\r\n    width: 100%\r\n`;\r\n\r\nconst SearchPresenter =({\r\n    movieResults,\r\n    tvResults,\r\n    loading,\r\n    searchTerm,\r\n    handleSubmit,\r\n    error,\r\n    updateTerm\r\n}) => (\r\n    <Container>\r\n        <Helmet>\r\n            <title>search | yourflix</title>\r\n        </Helmet>\r\n        <Form onSubmit={handleSubmit}>\r\n            <Input \r\n                placeholder = \"search movies or tv shows...\"\r\n                value ={searchTerm}\r\n                onChange ={updateTerm}\r\n            />\r\n        </Form>\r\n        {loading ?(\r\n            <Loader/>\r\n        ):(\r\n            <>\r\n                {movieResults && movieResults.length>0 &&(\r\n                    <Section>\r\n                        {movieResults.map(movie =>(\r\n                            <Poster\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                imageUrl={movie.poster_path}\r\n                                title={movie.original_title}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date.substring(0, 4)}\r\n                                isMovie={true}\r\n                            />\r\n                        ))}\r\n                     </Section>\r\n                )}\r\n                {tvResults && tvResults.length>0 &&(\r\n                    <Section>\r\n                        {tvResults.map( show=>(\r\n                        <Poster\r\n                            key={show.id}\r\n                            id={show.id}\r\n                            imageUrl={show.poster_path}\r\n                            title={show.original_name}\r\n                            rating={show.vote_average}\r\n                            year={show.first_air_date.substring(0, 4)}\r\n                          />\r\n                        ) )}\r\n                    </Section>\r\n                )}\r\n                {error && <Message color=\"#e74c3c\" text={error} />}\r\n                {tvResults &&\r\n                    movieResults &&\r\n                    tvResults.length === 0 &&\r\n                    movieResults.length === 0 && (\r\n                        <Message text=\"Nothing found\" color=\"#95a5a6\" />\r\n                    )}   \r\n            </>\r\n        )}\r\n    </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults: PropTypes.array,\r\n    tvResults: PropTypes.array,\r\n    error: PropTypes.string,\r\n    searchTerm: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    updateTerm: PropTypes.func.isRequired\r\n  };\r\n\r\n  export default SearchPresenter;","import SearchContainer from './SearchContainer';\r\n\r\nexport default SearchContainer;","import React from 'react';\r\nimport SearchPresenter from './SearchPresenter';\r\nimport {moviesApi, tvApi} from '../../api';\r\n\r\nexport default class extends React.Component {\r\n    state ={\r\n        movieResults : null,\r\n        tvResults : null ,\r\n        searchTerm : \"\",\r\n        loading : false ,\r\n        error : null\r\n    };\r\n\r\n    handleSubmit = event =>{\r\n        event.preventDefault();\r\n        const {searchTerm} = this.state;\r\n        if(searchTerm !== \"\"){\r\n            this.searchByTerm();\r\n        }\r\n    };\r\n\r\n    updateTerm = event =>{\r\n        const {target : {value}} = event;\r\n        this.setState({\r\n            searchTerm : value\r\n        });\r\n    };\r\n\r\n    searchByTerm = async () => {\r\n        const { searchTerm } = this.state;\r\n        this.setState({ loading: true });\r\n        try {\r\n          const {\r\n            data: { results: movieResults }\r\n          } = await moviesApi.search(searchTerm);\r\n\r\n        \r\n          const {\r\n            data: { results: tvResults }\r\n          } = await tvApi.search(searchTerm);\r\n          this.setState({\r\n            movieResults,\r\n            tvResults\r\n          });\r\n        } catch {\r\n          this.setState({ error: \"Can't find results.\" });\r\n        } finally {\r\n          this.setState({ loading: false });\r\n        }\r\n      };\r\n    \r\n    render(){\r\n        const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n        return(\r\n            <SearchPresenter\r\n                movieResults = {movieResults}\r\n                tvResults = {tvResults}\r\n                loading = {loading}\r\n                error ={error}\r\n                searchTerm ={searchTerm}\r\n                handleSubmit ={this.handleSubmit}\r\n                updateTerm = {this.updateTerm}\r\n            />\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\n\r\n\r\nconst Container = styled.div`\r\n    height: calc(100vh - 50px);\r\n    width: 100%;\r\n    position: relative;\r\n    padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image : url(${props => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    filter: blur(3px);\r\n    opacity: 0.5;\r\n    z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    position: relative;\r\n    z-index: 1;\r\n    height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n    width: 30%;\r\n    background-image: url(${props => props.bgImage});\r\n    background-position: center center;\r\n    background-size: cover;\r\n    height: 100%;\r\n    border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    width: 70%;\r\n    margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n    margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n    margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n    font-size: 12px;\r\n    opacity: 0.7;\r\n    line-height: 1.5;\r\n    width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({result, loading,}) =>\r\n\r\nloading ?(\r\n    <>\r\n        <Helmet>\r\n            <title>loading | nomflix</title>\r\n        </Helmet>\r\n        <Loader/>\r\n    </>\r\n):(\r\n    <Container>\r\n        <Helmet>\r\n            <title>\r\n                {result.original_title? result.original_title : result.original_name} {\" \"}\r\n                | flix\r\n            </title>\r\n        </Helmet>\r\n        <Backdrop    bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\r\n        <Content>\r\n            <Cover bgImage ={\r\n                result.poster_path \r\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                : require(\"../../assets/noPosterSmall.png\")\r\n            } />\r\n            <Data>\r\n                <Title>\r\n                    {result.original_title\r\n                        ? result.original_title\r\n                        : result.original_name}\r\n                </Title>\r\n                <ItemContainer>\r\n                    <Item>\r\n                        {result.release_date\r\n                            ? result.release_date.substring(0,4)\r\n                            : result.first_air_date.substring(0.4)\r\n                        }\r\n                    </Item>\r\n                    <Divider>•</Divider>\r\n                    <Item>\r\n                    {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n                    </Item>\r\n                    <Divider>•</Divider>\r\n                    <Item>\r\n                        {result.genres.map((genre, index) =>\r\n                            index === result.genres.length -1\r\n                            ? genre.name\r\n                            : `${genre.name}`\r\n                        )}\r\n                    </Item>\r\n                </ItemContainer>\r\n                <Overview>{result.overview}</Overview>\r\n            </Data>\r\n        </Content>\r\n    </Container>\r\n);\r\n\r\nDetailPresenter.prototype ={\r\n    result: PropTypes.object,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\n\r\n\r\n\r\nexport default DetailPresenter;","import DetailContainer  from './DetailContainer';\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    const{\r\n      location: {pathname}\r\n    } = props;\r\n    this.state ={\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\")\r\n    };\r\n  }\r\n\r\n  async componentDidMount(){\r\n    const {\r\n      match: {\r\n        params: {id}\r\n      },\r\n      history: {push}\r\n    } = this.props;\r\n    const {isMovie} = this.state;\r\n    const parsedId = parseInt(id);\r\n    if(isNaN(parsedId)){\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if(isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId)) ;\r\n      } else {\r\n        ({data: result} = await tvApi.showDetail(parsedId));\r\n      }\r\n    }catch{\r\n        this.setState({error: \"can't fint anything\"});\r\n    }finally{\r\n        this.setState({loading : false , result});\r\n    }\r\n  }\r\n  render(){\r\n    const {result , error, loading} = this.state;\r\n    return <DetailPresenter result={result} error={error} loading={loading} />\r\n  }\r\n}","import React from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Route,\r\n    Redirect,\r\n    Switch\r\n} from 'react-router-dom';\r\nimport Home from 'Routes/Home';\r\nimport TV from 'Routes/TV';\r\nimport Header from 'Components/Header';\r\nimport Search from 'Routes/Search';\r\nimport Detail from 'Routes/Detail';\r\n\r\nexport default () =>(\r\n    <Router>\r\n     <>\r\n        <Header/>\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/tv\" component={TV}/>\r\n            <Route path=\"/search\" component={Search}/>\r\n            <Route path=\"/movie/:id\" component={Detail}/>\r\n            <Route path=\"/show/:id\" component={Detail}/>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n        </Switch>\r\n     </>\r\n    </Router>\r\n);","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from 'styled-reset';\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;","import React, { Component } from \"react\";\r\nimport Router from \"Components/Router\";\r\nimport GlobalStyles from \"Components/GlobalStyles\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Router />\r\n        <GlobalStyles />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}